{"version":3,"sources":["components/AddCategory/AddCategory.js","components/GifGridItem/GifGridItem.js","helpers/getGifs.js","components/GifGrid/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","GifGridItem","id","title","url","className","src","alt","getGifs","category","a","encodeURI","fetch","respuesta","json","data","gifs","map","image","images","downsized_medium","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","key","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"qMAmCeA,EAhCK,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EACLC,mBAAS,IADJ,mBAClCC,EADkC,KACtBC,EADsB,KAezC,OACE,0BACEC,SAVmB,SAACC,GACtBA,EAAEC,iBACGJ,EAAWK,OAAOC,OAAS,IAC9BR,GAAe,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACvCN,EAAe,OAQf,2BACEO,KAAK,OACLC,MAAOT,EACPU,SAnBoB,SAACP,GACzBF,EAAeE,EAAEQ,OAAOF,YCIbG,EATK,SAAC,GAAqB,EAApBC,GAAqB,IAAjBC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,IAC/B,OACE,yBAAKC,UAAU,0CACb,yBAAKC,IAAKF,EAAKG,IAAKJ,IACpB,2BAAIA,K,uBCLGK,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbN,EADa,iDACmCO,UAAWF,GAD9C,+DAEKG,MAAMR,GAFX,cAEbS,EAFa,gBAGEA,EAAUC,OAHZ,uBAGZC,EAHY,EAGZA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GAAU,IAAD,EAC9B,MAAO,CACHhB,GAAKgB,EAAMhB,GACXC,MAAQe,EAAMf,MACdC,IAAG,UAAGc,EAAMC,cAAT,aAAG,EAAcC,iBAAiBhB,QATxB,kBAaZY,GAbY,4CAAH,sDC2BLK,EAvBC,SAAC,GAAgB,IAAfZ,EAAc,EAAdA,SAAc,ECFJ,SAAEA,GAAe,IAAD,EAChBrB,mBAAS,CACjC2B,KAAM,GACNO,SAAS,IAH+B,mBACnCC,EADmC,KAC5BC,EAD4B,KAc1C,OARAC,qBAAW,WACTjB,EAAUC,GACPiB,MAAM,SAAAC,GAAI,OAAIH,EAAU,CACvBT,KAAMY,EACNL,SAAS,SAEZ,CAAEb,IAEEc,EDV0BK,CAAcnB,GAAlCU,EAFiB,EAEtBJ,KAAaO,EAFS,EAETA,QAGrB,OACE,oCACE,wBAAIjB,UAAU,qCAAqCI,GAEjDa,GAAW,uBAAGjB,UAAU,oCAAb,cAEb,yBAAKA,UAAU,aACZc,EAAOF,KAAK,SAAAC,GAAK,OAChB,kBAAC,EAAD,eACEW,IAAKX,EAAMhB,IACPgB,UEKDY,EArBM,WAAO,IAAD,EACW1C,mBAAS,CAAC,gBADrB,mBAClB2C,EADkB,KACN5C,EADM,KAGzB,OACE,oCACE,8CACA,kBAAC,EAAD,CAAaA,cAAgBA,IAC7B,6BAGG4C,EAAWd,KAAK,SAAAR,GAAQ,OACvB,kBAAC,EAAD,CACEA,SAAUA,EACVoB,IAAKpB,S,MCVjBuB,IAASC,OACL,kBAAC,EAAD,MACFC,SAASC,eAAe,U","file":"static/js/main.7bd44544.chunk.js","sourcesContent":["import React, {useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst AddCategory = ( {setCategories} ) => {\r\n  const [inputValue, setinputValue] = useState('');\r\n\r\n  const handleInputChange = (e) => {\r\n    setinputValue( e.target.value );\r\n  }\r\n\r\n  const handleOnSubmit = (e) => {\r\n    e.preventDefault();\r\n    if ( inputValue.trim().length > 2 ) {\r\n      setCategories( cats => [inputValue, ...cats] );\r\n      setinputValue( '' );\r\n    }\r\n  }\r\n  \r\n  return ( \r\n    <form \r\n      onSubmit={handleOnSubmit}\r\n    >\r\n      <input \r\n        type='text'\r\n        value={inputValue}\r\n        onChange={handleInputChange}\r\n      />\r\n    </form>\r\n  );\r\n}\r\n\r\nAddCategory.propTypes = {\r\n  setCategories : PropTypes.func.isRequired,\r\n}\r\n \r\nexport default AddCategory;","import React from 'react';\r\n\r\nconst GifGridItem = ({id, title, url}) => {\r\n  return (\r\n    <div className='card animate__animated animate__fadeIn'>\r\n      <img src={url} alt={title} />\r\n      <p>{title}</p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default GifGridItem;\r\n","\r\nexport const getGifs = async( category ) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI( category )}&limit=10&api_key=DSVIG8wGkIYrx0dZiqmC7D0Cm7VcinPo`;\r\n    const respuesta = await fetch(url);\r\n    const {data} = await respuesta.json();\r\n    \r\n    const gifs = data.map( image => {\r\n      return {\r\n          id : image.id,\r\n          title : image.title,\r\n          url : image.images?.downsized_medium.url\r\n        }\r\n    });\r\n\r\n    return gifs;\r\n  }\r\n","import React from 'react';\r\nimport GifGridItem from '../GifGridItem/GifGridItem';\r\nimport { useFetchGifs } from '../../hooks/useFetchGifs';\r\n\r\n\r\nconst GifGrid = ({category}) => {\r\n\r\n  const { data:images, loading } = useFetchGifs( category );\r\n\r\n\r\n  return (\r\n    <>\r\n      <h3 className='animate__animated animate__fadeIn'>{category}</h3>\r\n\r\n      { loading && <p className='animate__animated animate__flash'>Loading...</p> }\r\n\r\n      <div className='card-grid'> \r\n        {images.map( image => (\r\n          <GifGridItem \r\n            key={image.id} \r\n            {...image}\r\n          />\r\n        ))}\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default GifGrid;\r\n","import { useState, useEffect } from \"react\";\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n  const [state, setState] = useState({\r\n    data: [],\r\n    loading: true\r\n  });\r\n\r\n  useEffect( () => {\r\n    getGifs ( category )\r\n      .then( imgs => setState( {\r\n        data: imgs,\r\n        loading: false\r\n      } ) );\r\n  }, [ category ] );\r\n\r\n  return state;\r\n}\r\n\r\n\r\n","import React, {useState} from 'react';\r\nimport AddCategory from './components/AddCategory/AddCategory';\r\nimport GifGrid from './components/GifGrid/GifGrid';\r\n\r\nconst GifExpertApp = () => {\r\n  const [categories, setCategories] = useState(['Dragon Ball']);\r\n\r\n  return ( \r\n    <>\r\n      <h2>Gif Expert App</h2>\r\n      <AddCategory setCategories={ setCategories }/>\r\n      <hr />\r\n\r\n      {/* <ol> */}\r\n        {categories.map( category => (\r\n          <GifGrid \r\n            category={category} \r\n            key={category}\r\n          />\r\n        ))}\r\n      {/* </ol> */}\r\n    </>\r\n  );\r\n}\r\n   \r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport GifExpertApp from './GifExpertApp'\n\nimport './index.css';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}